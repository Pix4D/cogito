# Install `task` from https://taskfile.dev
# Run `task --list` to start.

version: "3"

env:
  DOCKER_IMAGE: cogito

vars:
  DATE: '{{ now | date "2006-01-02" }}'
  COMMIT:
    sh: git log -n 1 --format=%h
  REPO: github.com/Pix4D/cogito
  TAG:
    sh: ci/git-ref-to-docker-tag.sh
  BUILD_INFO: "Tag: {{.TAG}}, commit: {{.COMMIT}}, build date: {{.DATE}}"
  LDFLAGS: -w -X '{{.REPO}}/resource.buildinfo={{.BUILD_INFO}}'
  GOTESTSUM:
    sh: "echo $(which gotestsum 2> /dev/null)"
  TESTRUNNER: "{{if .GOTESTSUM}}{{base .GOTESTSUM}} --{{else}}go test{{end}}"

tasks:
  default:
    deps: [test]
    desc: Sensible defaults if you invoke `task` without arguments.
  ci-init:
    desc: Useful only when running under CI.
    cmds:
      - cmd: go get gotest.tools/gotestsum
      - cmd: echo
        silent: true
      - cmd: go mod download
  test:
    desc: Run the tests.
    cmds:
      - "{{.TESTRUNNER}} -count=1 -coverprofile=coverage.out ./..."
      - go tool cover -html=coverage.out -o coverage.html
  test-e2e:
    desc: Run also the e2e tests.
    cmds:
      - "{{.TESTRUNNER}} -count=1 -coverprofile=coverage.out ./..."
      - go tool cover -html=coverage.out -o coverage.html
    env:
      COGITO_TEST_COMMIT_SHA:
        sh: gopass show cogito/test_commit_sha
      COGITO_TEST_OAUTH_TOKEN:
        sh: gopass show cogito/test_oauth_token
      COGITO_TEST_REPO_NAME:
        sh: gopass show cogito/test_repo_name
      COGITO_TEST_REPO_OWNER:
        sh: gopass show cogito/test_repo_owner
  copydir:
    desc: Build copydir.
    dir: bin
    cmds:
      - go build -ldflags "{{.LDFLAGS}}" ../cmd/copydir
  build:
    deps: [copydir]
    desc: Build on the local machine.
    dir: bin
    cmds:
      - go build -ldflags "{{.LDFLAGS}}" ../cmd/check
      - go build -ldflags "{{.LDFLAGS}}" ../cmd/in
      - go build -ldflags "{{.LDFLAGS}}" ../cmd/out
      - go build -ldflags "{{.LDFLAGS}}" ../cmd/hello
  docker-login:
    silent: true
    cmds:
      - echo "Logging in to DockerHub"
      - docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN 2> /dev/null
    env:
      DOCKER_TOKEN:
        sh: echo ${DOCKER_TOKEN:-$(gopass show cogito/docker_token)}
      DOCKER_USERNAME:
        sh: echo ${DOCKER_USERNAME:-$(gopass show cogito/docker_username)}
  docker-build:
    deps: [docker-login]
    desc: Build the Docker image.
    cmds:
      - docker build --build-arg BUILD_INFO --tag $DOCKER_IMAGE .
    env:
      BUILD_INFO: "{{.BUILD_INFO}}"
  docker-smoke:
    desc: Simple smoke test of the Docker image.
    cmds:
      - echo '{{.INPUT}}' | docker run --rm --interactive cogito /opt/resource/check
      - echo
      - echo '{{.INPUT}}' | docker run --rm --interactive cogito /opt/resource/in dummy
      - echo
    vars:
      INPUT: '{ "source": { "owner": "foo", "repo": "bar", "access_token": "123"} }'
  docker-push:
    deps: [docker-login]
    cmds:
      - docker tag $DOCKER_IMAGE $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_TAG
      - echo Pushing $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_TAG
      - docker push $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_TAG
      - |-
        if [ -n "$DOCKER_LATEST" ]; then
            docker tag $DOCKER_IMAGE $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_LATEST
            echo Pushing $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_LATEST
            docker push $DOCKER_ORG/$DOCKER_IMAGE:$DOCKER_LATEST
        fi
    env:
      DOCKER_ORG:
        sh: echo ${DOCKER_ORG:-$(gopass show cogito/docker_org)}
      DOCKER_TAG:
        sh: ci/git-ref-to-docker-tag.sh
      DOCKER_LATEST:
        sh: ci/git-latest.sh
